### AUTO GENERATED. DO NOT MODIFY. ###
# This file should be auto generated by the files in the src folder.
# You can update it by running `yarn run circleci:update-config`.
commands:
    check_config:
        description: This command builds the circle config from the files in src and validates that it is up-to-date and valid.
        steps:
            - run:
                command: curl -fLSs https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | sudo bash
                name: Install CircleCI CLI
            - run:
                command: yarn run circleci:update-config
                name: Build circle config
            - run:
                command: |
                    FILES_MODIFIED=""
                    setcommit () {
                      FILES_MODIFIED=$(git status -s | grep -i -E '.*circleci/config.yml')
                    }
                    setcommit || true
                    if [ -z "$FILES_MODIFIED" ]
                    then
                      echo "The CircleCI config is up to date."
                      exit 0;
                    else
                      echo "The CircleCI config is not up to date. You can update it by running `yarn run circleci:update-config`."
                      exit 1;
                    fi
                name: CircleCI config up to date
            - run:
                command: circleci config validate
                name: Validate circle config
    persist_environment_variables:
        description: Writes the environment variables to the file 'environment_variables'. Make sure the file is persisted and has been attached.
        steps:
            - run:
                command: cat ${BASH_ENV}
                name: List environment variables
            - run:
                command: cat ${BASH_ENV} >> environment_variables
                name: Save environment variables to file
            - persist_to_workspace:
                paths:
                    - environment_variables
                root: ./
    prepare_workspace:
        description: Attach the workspace at ~/attached_workspace and list its contents
        steps:
            - attach_workspace:
                at: ~/attached_workspace
            - run:
                command: ls ~/attached_workspace
                name: Attached workspace contents
            - run:
                command: ls -R ~/attached_workspace
                name: Recursively list attached workspace contents
    restore_cocoa_pods_cache:
        description: Restores and saves the cocoa pods cache.
        steps:
            - restore_cache:
                keys:
                    - 3-pods-{{ arch }}-{{ checksum "ios/Podfile.lock" }}
                    - 3-pods-{{ arch }}-
                name: Restore CocoaPods Cache
            - run:
                command: bundle exec pod install
                name: '[CP] Install CocoaPods'
                working_directory: ios
            - save_cache:
                key: 3-pods-{{ arch }}-{{ checksum "ios/Podfile.lock" }}
                name: Save CocoaPods Cache
                paths:
                    - ~/Library/Caches/CocoaPods/
    restore_environment_variables:
        description: Sets the environment variables specified in the file 'environment_variables'. Make sure the file is persisted and has been attached.
        steps:
            - run:
                command: cat ~/attached_workspace/environment_variables
                name: List environment variables
            - run:
                command: cat ~/attached_workspace/environment_variables >> ${BASH_ENV}
                name: Restore environment variables
    restore_ruby_cache:
        description: Restores and saves fastlane cache of the passed directory.
        parameters:
            directory:
                default: android
                type: string
        steps:
            - restore_cache:
                keys:
                    - 3-gems-{{ arch }}-{{ checksum "<< parameters.directory >>/Gemfile.lock" }}
                    - 3-gems-{{ arch }}-
            - run:
                command: bundle check || bundle install
                name: Install Fastlane
                working_directory: << parameters.directory >>
            - save_cache:
                key: 3-gems-{{ arch }}-{{ checksum "<< parameters.directory >>/Gemfile.lock" }}
                paths:
                    - << parameters.directory >>/vendor/bundle
    restore_yarn_cache:
        description: Restores and saves the node_modules directory
        steps:
            - restore_cache:
                keys:
                    - yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
                name: Restore Yarn Package Cache
            - run:
                command: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
                name: Install Dependencies
            - save_cache:
                key: yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
                name: Save Yarn Package Cache
                paths:
                    - ~/.cache/yarn
    restore_yarn_tools_cache:
        description: Restores and saves the node_modules directories of the tools package.
        steps:
            - restore_cache:
                key: 2-yarn-{{ arch }}-{{ checksum "tools/yarn.lock" }}-{{ checksum "tools/package.json" }}
                name: Restore Yarn Tools Package Cache
            - run:
                command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn-tools
                name: Yarn tools
                working_directory: tools
            - save_cache:
                key: 2-yarn-{{ arch }}-{{ checksum "tools/yarn.lock" }}-{{ checksum "tools/package.json" }}
                name: Save Yarn Tools Package Cache
                paths:
                    - ~/.cache/yarn-tools
                    - tools/node_modules
jobs:
    build_android:
        docker:
            - image: circleci/android:api-29-node
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        resource_class: medium+
        shell: /bin/bash -eo pipefail
        steps:
            - add_ssh_keys:
                fingerprints:
                    - 5b:28:97:36:8b:31:08:ae:5d:ad:19:8a:7d:6f:57:8a
            - checkout
            - restore_ruby_cache:
                directory: android
            - restore_yarn_cache
            - prepare_workspace
            - restore_environment_variables
            - run:
                command: bundle exec fastlane keystore
                name: '[FL] Prepare Android Keystore'
                working_directory: android
            - run:
                command: bundle exec fastlane build version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE}
                name: '[FL] Build Android'
                working_directory: android
            - run:
                command: mkdir -p attached_workspace && mv app/build/outputs/apk/release/app-release.apk attached_workspace/app-release.apk
                name: Move apk
                working_directory: android
            - persist_to_workspace:
                paths:
                    - app-release.apk
                root: android/attached_workspace
            - store_artifacts:
                path: android/attached_workspace/app-release.apk
    build_ios:
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
            FL_OUTPUT_DIR: output
            TOTAL_CPUS: 4
        macos:
            xcode: 12.5.1
        resource_class: medium
        shell: /bin/bash --login -o pipefail
        steps:
            - add_ssh_keys:
                fingerprints:
                    - 5b:28:97:36:8b:31:08:ae:5d:ad:19:8a:7d:6f:57:8a
            - checkout
            - prepare_workspace
            - restore_environment_variables
            - restore_yarn_cache
            - restore_ruby_cache:
                directory: ios
            - restore_cocoa_pods_cache
            - run:
                command: bundle exec fastlane build version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE}
                name: Build iOS
                working_directory: ios
            - store_artifacts:
                path: ios/output/gym/app-release.ipa
            - persist_to_workspace:
                paths:
                    - app-release.ipa
                root: ios/output/gym
    bump_version:
        docker:
            - image: circleci/node:14.16.0
        parameters:
            delivery:
                default: none
                description: Which type of delivery is made. If none, the bumped version is not committed.
                enum:
                    - none
                    - development
                    - production
                type: enum
        resource_class: small
        steps:
            - checkout
            - restore_yarn_tools_cache
            - run:
                command: echo "export NEW_VERSION_NAME=$(tools/next-version calc | jq .versionName)" >> ${BASH_ENV}
                name: Calculate next version name
            - run:
                command: echo "export NEW_VERSION_CODE=$(tools/next-version calc | jq .versionCode)" >> ${BASH_ENV}
                name: Calculate next version code
            - unless:
                condition:
                    equal:
                        - none
                        - << parameters.delivery >>
                steps:
                    - run:
                        command: tools/git-version bump-to ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH}
                        name: Bump git version
            - persist_environment_variables
    check:
        docker:
            - image: circleci/node:14.16.0
        steps:
            - checkout
            - check_config
            - restore_yarn_cache
            - run:
                command: yarn lint
                name: Linting check
            - run:
                command: yarn prettier --check .
                name: Prettier check
            - run:
                command: yarn test
                name: Run unit tests
    deliver_android:
        docker:
            - image: circleci/android:api-29-node
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        parameters:
            production_delivery:
                description: Whether to deliver the build to production.
                type: boolean
        shell: /bin/bash -eo pipefail
        steps:
            - checkout
            - prepare_workspace
            - restore_environment_variables
            - restore_yarn_tools_cache
            - restore_ruby_cache:
                directory: android
            - run:
                command: tools/parse-release-notes parse --android --destination android/fastlane/metadata/de-DE/changelogs/default.txt --production
                name: Parse german android release notes
            - run:
                command: bundle exec fastlane validate_play_store_key
                name: Validate Play Store Key
                working_directory: android
            - prepare_workspace
            - restore_environment_variables
            - restore_yarn_cache
            - run:
                command: bundle exec fastlane upload_to_playstore version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE} production_delivery:"<< parameters.production_delivery >>"
                name: PlayStore Upload
                working_directory: android
    deliver_browser_stack:
        docker:
            - image: circleci/android:api-29-node
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        shell: /bin/bash -eo pipefail
        steps:
            - checkout
            - prepare_workspace
            - restore_ruby_cache:
                directory: android
            - run:
                command: mv ~/attached_workspace/app-release.apk ~/attached_workspace/${CIRCLE_BRANCH}.apk
                name: Rename apk
            - run:
                command: mv ~/attached_workspace/app-release.ipa ~/attached_workspace/${CIRCLE_BRANCH}.ipa
                name: Rename ipa
            - run:
                command: bundle exec fastlane android upload_to_browserstack file_path:attached_workspace/${CIRCLE_BRANCH}.apk
                name: BrowserStack Upload android
                working_directory: android
            - restore_ruby_cache:
                directory: ios
            - run:
                command: bundle exec fastlane ios upload_to_browserstack file_path:attached_workspace/${CIRCLE_BRANCH}.ipa
                name: BrowserStack Upload iOS
                working_directory: ios
            - run:
                command: mv ~/attached_workspace/${CIRCLE_BRANCH}.apk ~/attached_workspace/app-release.apk
                name: Undo rename apk
            - run:
                command: mv ~/attached_workspace/${CIRCLE_BRANCH}.ipa ~/attached_workspace/app-release.ipa
                name: Undo raname ipa
    deliver_ios:
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        macos:
            xcode: 12.5.1
        parameters:
            production_delivery:
                default: false
                description: Whether to deliver the build to production.
                type: boolean
        shell: /bin/bash --login -o pipefail
        steps:
            - checkout
            - prepare_workspace
            - restore_environment_variables
            - restore_yarn_tools_cache
            - restore_ruby_cache:
                directory: ios
            - run:
                command: tools/parse-release-notes parse --ios --destination ios/fastlane/metadata/de-DE/release_notes.txt --production
                name: Parse german ios release notes
            - when:
                condition: << parameters.production_delivery >>
                steps:
                    - run:
                        command: bundle exec fastlane ios upload_to_appstoreconnect ipa_path:attached_workspace/app-release.ipa version_name:${NEW_VERSION_NAME}
                        name: '[FL] App Store Connect Upload'
                        working_directory: ios
            - unless:
                condition: << parameters.production_delivery >>
                steps:
                    - run:
                        command: bundle exec fastlane upload_to_test_flight ipa_path:attached_workspace/app-release.ipa
                        name: '[FL] TestFlight Upload'
                        working_directory: ios
    move_release_notes:
        docker:
            - image: circleci/node:14.9.0
        resource_class: small
        steps:
            - checkout
            - prepare_workspace
            - restore_environment_variables
            - restore_yarn_tools_cache
            - run:
                command: tools/move-release-notes move-to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH}
                name: Move release notes
    promote_android:
        docker:
            - image: circleci/android:api-29-node
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        resource_class: small
        shell: /bin/bash -eo pipefail
        steps:
            - checkout
            - restore_ruby_cache:
                directory: android
            - run:
                command: bundle exec fastlane android playstore_promote
                name: '[FL] Play Store Promotion'
                working_directory: android
    promote_ios:
        environment:
            FASTLANE_SKIP_UPDATE_CHECK: true
        macos:
            xcode: 12.5.1
        shell: /bin/bash --login -o pipefail
        steps:
            - checkout
            - restore_yarn_tools_cache
            - restore_yarn_cache
            - restore_ruby_cache:
                directory: ios
            - run:
                command: bundle exec fastlane ios appstoreconnect_promote
                name: '[FL] App Store Connect Promotion'
                working_directory: ios
parameters:
    run_commit:
        default: true
        type: boolean
    run_dev_delivery:
        default: false
        type: boolean
    run_prod_delivery:
        default: false
        type: boolean
    run_promote:
        default: false
        type: boolean
version: 2.1
workflows:
    commit:
        jobs:
            - check
            - bump_version:
                delivery: none
            - build_android:
                requires:
                    - check
                    - bump_version
            - build_ios:
                requires:
                    - check
                    - bump_version
            - deliver_browser_stack:
                requires:
                    - build_android
                    - build_ios
        when: << pipeline.parameters.run_commit >>
    dev_delivery:
        jobs:
            - check
            - bump_version:
                delivery: development
            - build_android:
                requires:
                    - check
                    - bump_version
            - build_ios:
                requires:
                    - check
                    - bump_version
            - deliver_browser_stack:
                requires:
                    - build_android
                    - build_ios
            - deliver_android:
                production_delivery: false
                requires:
                    - build_android
            - deliver_ios:
                production_delivery: false
                requires:
                    - build_ios
            - move_release_notes:
                requires:
                    - deliver_android
                    - deliver_ios
        when: << pipeline.parameters.run_dev_delivery >>
    prod_delivery:
        jobs:
            - check
            - bump_version:
                delivery: production
            - build_android:
                requires:
                    - check
                    - bump_version
            - build_ios:
                requires:
                    - check
                    - bump_version
            - deliver_android:
                production_delivery: true
                requires:
                    - build_android
            - deliver_ios:
                production_delivery: true
                requires:
                    - build_ios
            - move_release_notes:
                requires:
                    - deliver_android
                    - deliver_ios
        when: << pipeline.parameters.run_prod_delivery >>
    promote:
        jobs:
            - promote_android
            - promote_ios
        when: << pipeline.parameters.run_promote >>
    version: 2

